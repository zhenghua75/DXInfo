<UserControl x:Class="FairiesCoolerCash.Business.DeskManageUserControl"           
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FairiesCoolerCash.Business"
      
       xmlns:WpfKb="clr-namespace:WpfKb.Controls;assembly=WpfKb"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      xmlns:m="clr-namespace:DXInfo.Models;assembly=DXInfo.Models"
      d:DesignHeight="450" d:DesignWidth="796"
      Background="{DynamicResource WindowBackgroundBrush}" 
        FontSize="20"      
       
      DataContext="{Binding DeskManageViewModel,Source={StaticResource Locator}}"    
                     xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	>
    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded" >
            <i:InvokeCommandAction Command="{Binding WinLoad}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>-->
    <UserControl.Resources>                        
        <!--<CollectionViewSource Source="{Binding OCInventory}" x:Key="CVS_OCInventory">
        </CollectionViewSource>-->
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="ComboBox2" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCard}" Value="True"/>
                        <Condition Binding="{Binding IsMoney}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ComboBox.ItemsSource" Value="{Binding lPayTypeAll}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCard}" Value="False"/>
                        <Condition Binding="{Binding IsMoney}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ComboBox.ItemsSource" Value="{Binding lPayType}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCard}" Value="True"/>
                        <Condition Binding="{Binding IsMoney}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ComboBox.ItemsSource" Value="{Binding lPayTypeCard}" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Margin="30,0,30,0">
         <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Command="{Binding RefreshDesk}" >刷新桌台</Button>
            <TextBlock Grid.Column="1" FontSize="26" FontWeight="Bold" HorizontalAlignment="Center">桌台管理</TextBlock>
        </Grid>
         
        
        <Border Grid.Row="1" BorderThickness="5" BorderBrush="AliceBlue" Margin="5" >
            <TextBlock TextWrapping="Wrap">
                    <Run Text="{Binding Card.CardNo,StringFormat={}卡号：{0}|}"/>
                    <Run Text="{Binding Member.MemberName,StringFormat={}会员名：{0}|}"/>
                    <Run Text="{Binding Member.IdCard,StringFormat={}证件号码：{0}|}"/>
                    <Run Text="{Binding CardType.Name,StringFormat={}卡类型：{0}|}"/>
                    <Run Text="{Binding CardLevel.Name,StringFormat={}卡级别：{0}|}"/>
                    <Run Text="{Binding CardLevel.Discount,StringFormat={}折扣：{0}|}"/>
                    <Run Text="{Binding CardDept.DeptName,StringFormat={}发卡门店：{0}|}"/>
                    <Run Text="{Binding CardBalance,TargetNullValue={x:Null},StringFormat={}余额：{0}|}"/>
                    <Run Text="{Binding Points,TargetNullValue={x:Null},StringFormat={}积分：{0}}"/>
            </TextBlock>
        </Border>
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"></ColumnDefinition>
                <ColumnDefinition Width="60*"></ColumnDefinition>
            </Grid.ColumnDefinitions>        
            <Grid>
                <Grid.RowDefinitions>
                    <local:RowDefinitionExtended Height="50"  Visible="{Binding BarcodeColumnVisibility}" />
                    <RowDefinition Height="40*"></RowDefinition>
                    <RowDefinition Height="60*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" BorderThickness="5" 
                         GotKeyboardFocus="TextBox_GotKeyboardFocus"
                         GotMouseCapture="TextBox_GotMouseCapture"
                         GotTouchCapture="TextBox_GotTouchCapture"
                         Text="{Binding Barcode,UpdateSourceTrigger=PropertyChanged}" 
                         BorderBrush="AliceBlue" Margin="5"  Visibility="{Binding BarcodeVisibility}" >
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding BarcodeCmd}" CommandParameter="{Binding RelativeSource=
        {RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}" Key="Enter"></KeyBinding>
                    </TextBox.InputBindings>
                </TextBox>
                <ListBox ItemsSource="{Binding OCDeskEx}" Grid.Row="1"
                         SelectedItem="{Binding SelectedDeskEx}"
                             SelectionMode="Single"
                             PreviewMouseDown="lvInv_PreviewMouseDown"
                         Background="{DynamicResource WindowBackgroundBrush}"
                      BorderThickness="5" BorderBrush="AliceBlue" Margin="5" Style="{x:Null}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         >
                    <ListBox.Resources>
                        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="Height" Value="{Binding ScrollBarHeight}" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Width" Value="{Binding ScrollBarWidth}"/>
                                    <Setter Property="Height" Value="Auto" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1" BorderBrush="AliceBlue">
                                <TextBlock Height="60" Width="60">
                            <StackPanel Height="60" Width="60" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock FontSize="20" 
                                           
                                           HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"  
                                           Text="{Binding Path=Code}"/>
                                <Image Width="50" Height="30" Source="{Binding Status,Converter={StaticResource myDeskStatusConverter}}"></Image>
                            </StackPanel>
                            </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--<Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    
                    <ListBox Name="lvRooms" 
                    ItemsSource="{Binding lRoom}"
                    SelectedItem="{Binding SelectedRoom}"
                             SelectionMode="Single"
                             PreviewMouseDown="lvInv_PreviewMouseDown"
                      Background="{DynamicResource WindowBackgroundBrush}"
                       BorderThickness="5" BorderBrush="AliceBlue" Margin="5"
                             Style="{x:Null}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListBox.Resources>
                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Height" Value="{Binding ScrollBarHeight}" />
                                    </Trigger>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width" Value="{Binding ScrollBarWidth}"/>
                                        <Setter Property="Height" Value="Auto" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Height="60" Width="60" Text="{Binding Name}">                            
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                </ListBox>
                    
                </Grid>-->
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40*"></RowDefinition>
                        <RowDefinition Height="60*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <ListBox Name="lvCategory" Grid.Column="0" Grid.Row="0"
                        ItemsSource="{Binding OCInventoryCategory}"
                        SelectedItem="{Binding SelectedInventoryCategory}"
                             SelectionMode="Single"
                        Background="{DynamicResource WindowBackgroundBrush}"
                        BorderThickness="5" BorderBrush="AliceBlue" Margin="5" Style="{x:Null}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListBox.Resources>
                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Height" Value="{Binding ScrollBarHeight}" />
                                    </Trigger>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width" Value="{Binding ScrollBarWidth}"/>
                                        <Setter Property="Height" Value="Auto" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="AliceBlue">
                                    <TextBlock TextWrapping="Wrap" Height="50" Width="90" Text="{Binding Path=Name}" FontSize="20">
                                    </TextBlock>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ListBox Name="lvInv" Grid.Row="1" 
                        ItemsSource="{Binding OCInventory}"
                             IsSynchronizedWithCurrentItem="False" SelectionMode="Single"
                             PreviewMouseDown="lvInv_PreviewMouseDown"
                        SelectedItem="{Binding SelectedInventory}"   
                        Background="{DynamicResource WindowBackgroundBrush}"
                        BorderThickness="5" BorderBrush="AliceBlue" Margin="5" 
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                        ScrollViewer.VerticalScrollBarVisibility="Auto" Style="{x:Null}">
                        <ListBox.Resources>
                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Height" Value="{Binding ScrollBarHeight}" />
                                    </Trigger>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width" Value="{Binding ScrollBarWidth}"/>
                                        <Setter Property="Height" Value="Auto" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="AliceBlue">
                                    <TextBlock Height="75" Width="90" TextWrapping="Wrap" FontSize="20">
                                    <Run FontSize="20" Text="{Binding Name}"></Run>
                                    <Run FontSize="13" Text="{Binding Path=SalePrice,StringFormat={}单价:{0}}"></Run>
                                    </TextBlock>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Border Grid.Column="0" Grid.Row="0" BorderThickness="5" BorderBrush="AliceBlue" Margin="5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="120"></RowDefinition>
                            <RowDefinition Height="50"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"></ColumnDefinition>
                            <ColumnDefinition Width="0.5*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="MyBorder" Margin="10,0,0,0"/>
                        
                        <ListBox Name="lvPayType"
                        SelectedItem="{Binding SelectedPayType}"
                             SelectionMode="Single"
                        Background="{DynamicResource WindowBackgroundBrush}"
                        BorderThickness="0" BorderBrush="AliceBlue" Margin="0" 
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListBox.Resources>
                                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="{Binding ScrollBarHeight}" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter Property="Width" Value="{Binding ScrollBarWidth}"/>
                                            <Setter Property="Height" Value="Auto" />
                                        </Trigger>
                                        
                                    </Style.Triggers>
                                </Style>
                               
                            </ListBox.Resources>
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsCard}" Value="True"/>
                                                <Condition Binding="{Binding IsMoney}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ItemsSource" Value="{Binding lPayTypeAll}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsCard}" Value="False"/>
                                                <Condition Binding="{Binding IsMoney}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ItemsSource" Value="{Binding lPayType}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsCard}" Value="True"/>
                                                <Condition Binding="{Binding IsMoney}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ItemsSource" Value="{Binding lPayTypeCard}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderThickness="1" BorderBrush="AliceBlue">
                                        <TextBlock TextWrapping="Wrap" Height="50" Width="90" Text="{Binding Path=Name}" FontSize="20">
                                        </TextBlock>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Border x:Name="MyBorder1" Grid.Row="0" Grid.Column="1"  Margin="10,0,0,0"/>
                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.5*"></RowDefinition>
                                <RowDefinition Height="0.5*"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBox Grid.Row="0" Grid.Column="0" Width="{Binding ElementName=MyBorder1, Path=ActualWidth}"  
                                 local:TextBoxMaskBehavior.Mask="Decimal"
                                            local:VirtualKeyboard.FloatingTouchScreenKeyboard="{Binding IsOpen}"
                                                   Text="{Binding Voucher,Converter={StaticResource decimalNullConverter}}">
                            <local:CueBannerService.CueBanner>
                                <TextBlock FontSize="20" Text="输入代金券金额"></TextBlock>
                            </local:CueBannerService.CueBanner>
                        </TextBox>
                            <Button Grid.Row="1" Grid.Column="0" Command="{Binding CheckOut}">结账</Button>
                        </Grid>
                        <Grid Grid.Row="1" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <local:ColumnDefinitionExtended Visible="{Binding SearchCardColumnVisibility}" />
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Command="{Binding SwipingCard}">刷卡</Button>
                            <Button Grid.Column="1" Visibility="{Binding SearchCardVisibility}" Command="{Binding SearchCard}">查找</Button>
                            <Button Grid.Column="2" Command="{Binding CancelSwipingCard}">重置</Button>
                        </Grid>

                        
                        <!--<Button Grid.Row="1" Grid.Column="1" Command="{Binding Checkout}" Content="{Binding CheckoutLabel}" Visibility="{Binding CheckoutVisibility}"></Button>-->                           
                    </Grid>
                </Border>
                <DataGrid Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False" 
                            CanUserDeleteRows="True"
                          ItemsSource="{Binding OCInventoryEx}"
                          SelectedItem="{Binding SelectedInventoryEx}"
                          CanUserAddRows="False" SelectionMode="Single" 
                              MinColumnWidth="80" RowHeight="50"                     
                      Background="{DynamicResource WindowBackgroundBrush}"
                      BorderThickness="5" BorderBrush="AliceBlue" Margin="5"
                              Visibility="{Binding OrderMenuVisibility}"
                          >
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding Path=DataContext.MenuOrder,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">下单</Button>
                                <Button Command="{Binding Path=DataContext.MenuCancelOrder,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">退菜</Button>
                                <Button Command="{Binding Path=DataContext.HurryMenu,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" >催菜</Button>
                                <Button Command="{Binding Path=DataContext.DeleteMenu,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">撤销</Button>
                            </StackPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Background" Value="{Binding Status,Converter={StaticResource myOrderMenuRowBackgroudConverter}}"></Setter>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="名称" Binding="{Binding Path=Name}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="价格" Binding="{Binding Path=SalePrice, StringFormat={}{0:N2}}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="数量">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="80"  Text="{Binding Quantity,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N0}}" 
                                                 IsEnabled="{Binding Status,Converter={StaticResource myOrderMenuStatusEnabledConverter}}"
                                      ></TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="金额" Binding="{Binding Path=Amount, StringFormat={}{0:N2}}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="状态" Binding="{Binding Path=Status,Converter={StaticResource myOrderMenuStatusConverter}}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="备注">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                    <TextBox Width="80"  Text="{Binding Comment,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Status,Converter={StaticResource myOrderMenuStatusEnabledConverter}}"
                                      ></TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="缺菜数" Binding="{Binding Path=MissQuantity, StringFormat={}{0:N0}}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="出菜数" Binding="{Binding Path=MenuQuantity, StringFormat={}{0:N0}}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="点菜员" Binding="{Binding Path=UserName}" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="等待时间" Binding="{Binding Path=WaitMinutes}" IsReadOnly="True"></DataGridTextColumn>
                        <!--<DataGridTextColumn Binding="{Binding Path=CurrentStock.Num,StringFormat={}中心库存：{0:N2}}" IsReadOnly="True"></DataGridTextColumn>-->
                    </DataGrid.Columns>
                    </DataGrid>
                <DataGrid Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False" IsReadOnly="True" 
                        ItemsSource="{Binding OCOrderBookEx}" SelectedItem="{Binding SelectedOrderBookEx}"
                   AlternatingRowBackground="Yellow" SelectionMode="Single"
                        BorderThickness="5" Visibility="{Binding OrderBookVisibility}">
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                <Button Content="修改" Command="{Binding Path=DataContext.ModifyBook,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                                <Button Content="取消预定" Command="{Binding Path=DataContext.CancelBook,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                                <Button Content="预定开台" Command="{Binding Path=DataContext.OpenBook,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                                <Button Content="预定换台" Command="{Binding Path=DataContext.ExchangeBookDesk,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                                <Button Content="预定加台" Command="{Binding Path=DataContext.AddBookDesk,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                                <Button Content="预定撤台" Command="{Binding Path=DataContext.CancelBookDesk,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" ></Button>
                            </StackPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                        <DataGrid.Columns>
                        <DataGridTextColumn Header="桌台" Binding="{Binding Path=DeskNo}"></DataGridTextColumn>
                        <DataGridTextColumn Header="预定开始时间"  Binding="{Binding Path=BookBeginDate,StringFormat={}{0:yyyy-MM-dd HH:mm}}"></DataGridTextColumn>
                            <DataGridTextColumn Header="预定结束时间"  Binding="{Binding Path=BookEndDate,StringFormat={}{0:yyyy-MM-dd HH:mm}}"></DataGridTextColumn>
                            <DataGridTextColumn Header="姓名" Binding="{Binding Path=Customer}"></DataGridTextColumn>
                            <DataGridTextColumn Header="电话" Binding="{Binding Path=LinkPhone}"></DataGridTextColumn>
                            <DataGridTextColumn Header="人数" Binding="{Binding Path=Quantity}"></DataGridTextColumn>
                            <DataGridTextColumn Header="操作员" Binding="{Binding Path=FullName}"></DataGridTextColumn>
                            <DataGridTextColumn Header="操作时间"  Binding="{Binding Path=CreateDate,StringFormat={}{0:yyyy-MM-dd HH:mm}}"></DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>                
                <TextBlock Grid.Row="2" TextWrapping="Wrap">
                        <Run>桌台：</Run>
                        <Run Text="{Binding SelectedDeskEx.Name}"></Run>
                        <Run Text="{Binding SelectedDeskEx.Code}"></Run>
                        <Run Text=" 大小："></Run>
                        <Run Text="{Binding SelectedDeskEx.Size}"></Run>
                        <Run Text=" 人数："></Run>
                        <Run Text="{Binding SelectedOrderDish.Quantity}"></Run>
                        <Run Text="{Binding SelectedOrderBook.Quantity}"></Run>
                        <Run Text="{Binding SelectedOrderBook.Customer,StringFormat={}姓名：{0}}"></Run>
                        <Run Text="{Binding SelectedOrderBook.LinkPhone,StringFormat={}电话：{0}}"></Run>
                </TextBlock>
                <TextBlock Grid.Row="3">                                        
                    <Run Text="{Binding SumQuantity,StringFormat={}数量合计：{0}}"/>
                    <Run Text="{Binding SumAmount,StringFormat={}金额合计：{0:C}}"/>
                    <Run Text="{Binding OpenOperName,StringFormat={}开台员：{0}}"/>
                </TextBlock>
                <WrapPanel Grid.Row="4" Orientation="Horizontal">
                    <Button Content="开台" Command="{Binding Open}" ></Button>
                    <Button Content="撤销" Command="{Binding CancelOpen}" ></Button>
                    <Button Content="下单" Command="{Binding Order}" ></Button>
                    <Button Content="重新打印" Command="{Binding RepeatPrint}" ></Button>
                    <Button Content="预定" Command="{Binding Book}" ></Button>                    
                    <Button Content="换台" Command="{Binding Exchange}"></Button>
                    <Button Content="加台" Command="{Binding AddDesk}"></Button>
                    <Button Content="撤台" Command="{Binding CancelOpenDesk}" ></Button>
                    <Button Content="并单" Command="{Binding Merge}"></Button>
                </WrapPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
