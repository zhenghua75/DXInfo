@model ynhnTransportManage.Models.ForRoleAddUserModel

@{
    ViewBag.Title = "为角色添加用户";
}

<h2>为角色添加用户</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>为角色添加用户</legend>

        <div class="editor-label" style="display:none">
            @Html.LabelFor(model => model.RoleId)
        </div>
        <div class="editor-field" style="display:none">
            @Html.EditorFor(model => model.RoleId)
            @Html.ValidationMessageFor(model => model.RoleId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RoleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RoleName)
            @Html.ValidationMessageFor(model => model.RoleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        @*<p>
            <input type="submit" value="Create" />
        </p>*@
    </fieldset>
}

@{
    var grid = new WebGrid(Model.Users, canPage: true, rowsPerPage: 20, canSort: true, selectionFieldName: "SelectedRow");
    
    var i = grid.RowsPerPage * grid.PageIndex;
    }
    @grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "paging-number",
        alternatingRowStyle: "webgrid-AlternatingItemStyle",
        selectedRowStyle: "webgrid-SelectedItemStyle",
        mode: WebGridPagerModes.All,
        firstText: "首页",
        previousText: "上页",
        nextText: "下页",
        lastText: "最后页",
        numericLinksCount: 50,        
        rowStyle: "webgrid-RowStyle",        
        columns: grid.Columns(
        grid.Column(format:(item)=>item.IsInRole?
                                             Html.ActionLink("删除", "DeleteUserFromRole2", new { userId = item.UserId,roleId=Model.RoleId,roleName = Model.RoleName }) :
                                                     Html.ActionLink("添加", "AddToRole2", new { userId = item.UserId, roleId = Model.RoleId, roleName = Model.RoleName })),
                
                grid.Column(format: item => (++i).ToString()),              
        grid.Column(columnName: "UserName", header: "用户名"),
        grid.Column(columnName: "FullName", header: "姓名"),
        grid.Column(columnName: "DeptName", header: "部门"),
        //grid.Column(columnName:"RoleDescription",header:"角色"),
                grid.Column(columnName: "LastActivityDate", header: "是否在线",
                format:(item)=>item.LastActivityDate> DateTime.UtcNow.AddMinutes(-Membership.UserIsOnlineTimeWindow)?"在线":
                                    (DateTime.UtcNow - item.LastActivityDate).TotalSeconds<=60?"离线1分钟":
                                            (DateTime.UtcNow - item.LastActivityDate).TotalMinutes < 60 ? "离线" + Math.Floor((DateTime.UtcNow - item.LastActivityDate).TotalMinutes) + " 分钟" :
                                    (DateTime.UtcNow - item.LastActivityDate).TotalMinutes<120?"离线1小时":
                                            (DateTime.UtcNow - item.LastActivityDate).TotalHours < 24 ? "离线" + Math.Floor((DateTime.UtcNow - item.LastActivityDate).TotalHours) + "小时" :
                                    (DateTime.UtcNow - item.LastActivityDate).TotalHours<48?"离线1天":"离线" + Math.Floor((DateTime.UtcNow - item.LastActivityDate).TotalDays) + "天"
                                     
                ),
                        grid.Column(columnName: "LastActivityDate", header: "上次活动时间", format: (item) => item.LastActivityDate.ToLocalTime()),
                                grid.Column(columnName: "LastLoginDate", header: "上次登录时间",format: (item) => item.LastLoginDate.ToLocalTime()),
                                        grid.Column(columnName: "CreateDate", header: "创建时间",format: (item) => item.CreateDate.ToLocalTime())
                                        
                                     )
)

<div>
    @Html.ActionLink("返回", "Roles")
</div>

