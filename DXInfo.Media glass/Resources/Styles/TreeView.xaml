<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />
        <ResourceDictionary Source="ScrollBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="GlassTreeViewScrollViewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DockPanel Focusable="False" Margin="{TemplateBinding Padding}">
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" Focusable="False"
                KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>

                        <ScrollBar Name="PART_HorizontalScrollBar"
              Orientation="Horizontal"
              Grid.Row="1"
              BorderBrush="{StaticResource fillBrush}"
               Background="Transparent"
              Maximum="{TemplateBinding ScrollableWidth}"
              ViewportSize="{TemplateBinding ViewportWidth}"
              Value="{TemplateBinding HorizontalOffset}"
              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
              Style="{StaticResource BlueScrollBar}"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
              Grid.Column="1"
              Maximum="{TemplateBinding ScrollableHeight}"
              ViewportSize="{TemplateBinding ViewportHeight}"
              Value="{TemplateBinding VerticalOffset}"
              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
              Style="{StaticResource BlueScrollBar}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<SnippetTreeView>-->
    <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
        <Setter Property="ToolTip" Value="{Binding Path=Header, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border 
            Name="Border" 
            CornerRadius="1" 
            Background="Transparent"
            BorderBrush="{StaticResource fillBrush}"
            BorderThickness="1" >
                        <ScrollViewer 
                Style="{StaticResource GlassTreeViewScrollViewer}"
              Focusable="False"
              CanContentScroll="False"
              Background="Transparent"
               Padding="0">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    
    <!--Triangle button-->
   
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="16"
                        Height="16"
                        Background="Transparent">                        
                        <Path 
                            x:Name="ExpandPath"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"              
                            Fill="{StaticResource fillBrush}"
                            Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TreeView item focus style-->
    
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
                            Margin="0,0,0,0"                                   
                            StrokeThickness="5"
                            Stroke="{StaticResource fillBrush}"
                            StrokeDashArray="1 2"
                            Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TreeViewItem-->

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="ToolTip" Value="{Binding Path=Header, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <!--<Setter Property="Padding" Value="1,0,0,0"/>-->
        <Setter Property="Foreground" Value="{StaticResource fillBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        
                        <!--Columns-->
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="16" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!--Rows-->

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <!--Triangle-->

                        <ToggleButton x:Name="Expander"                                                                    
                            Style="{StaticResource ExpandCollapseToggleStyle}"
                            IsChecked="{Binding Path=IsExpanded,
                            RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press" 
                            VerticalAlignment="Center" 
                            VerticalContentAlignment="Center"/>
                        
                        <!--Text with icon-->

                        <Border x:Name="ContentBorder"  
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">

                            <StackPanel Orientation="Horizontal">

                                <Path x:Name="FolderIcon" Margin="0,0,5,0" Stroke="Black" StrokeThickness="0" Fill="{StaticResource fillBrush}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Path.Data>
                                        <GeometryGroup FillRule="EvenOdd">
                                            <RectangleGeometry Rect="0,0 2 2"/>
                                            <RectangleGeometry Rect="2,1 7 1"/>
                                            <RectangleGeometry Rect="8,2 1 6"/>
                                            <RectangleGeometry Rect="0,0 10 10"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>

                                <Image x:Name="FileIcon" Source="pack://application:,,,/Resources/Images/Playlist.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,5,0"/>

                                <ContentPresenter x:Name="PART_Header" 
                                    Margin="0,0,5,0"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"/>

                            </StackPanel>

                        </Border>

                        <ItemsPresenter x:Name="ItemsHost"                                        
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"/>                        
                     
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FontWeight" Value="Bold">
                            <Setter TargetName="FileIcon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="FontWeight" Value="Normal">
                            <Setter TargetName="FolderIcon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ContentBorder" Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="{StaticResource fillBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="{StaticResource fillBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>