@using DXInfo.Web.Models
@model DXInfo.Web.Models.Report11Model           
<script type="text/javascript">
    $(function () {
        $("#BeginDate").datepicker();
        $("#EndDate").datepicker();
        $("#query").button();
        $("#query").button().click(function () {
            submitToDiv("Report");
        });
        $("#export").button();
        var ctrls = [{ name: "DeptId", type: "select" },
                     { name: "UserId", type: "select" },
                     { name: "Category", type: "select" },
                     { name: "Inventory", type: "select" },
                     { name: "BeginDate", type: "date" },
                     { name: "EndDate", type: "date" }, ];
        InitCtrl(ctrls);
        $("th>a,td>a[id!='export']").click(function () { addToDiv(this); return false; });
    });
	</script>
<h2 class="ui-widget-header h2-center">@ViewBag.Title</h2>
@using (Html.BeginReportForm("Report11", "Report", this.Model))
{
@Html.ValidationSummary(true, "参数错误。请更正错误并重试。", new { @class = "ui-state-error" })
@Html.HiddenFor(m => m.InvType)
@Html.HiddenFor(m => m.CategoryType)
@Html.HiddenFor(m => m.DeptType)
<fieldset class="ui-widget ui-widget-content ui-corner-all">
<legend class="ui-widget-header ui-corner-all"></legend>   
            <table>
            <tbody>
            <tr>
                <td><div class="editor-label" >@Html.LabelFor(m => m.DeptId)</div></td>
                <td><div class="editor-field">@Html.DropDownListFor(m => m.DeptId, @Html.GetDept())@Html.ValidationMessageFor(m => m.DeptId)</div></td>

                <td><div class="editor-label">@Html.LabelFor(m => m.UserId)</div></td>
                <td><div class="editor-field">@Html.DropDownListFor(m => m.UserId, @Html.GetOper())@Html.ValidationMessageFor(m => m.UserId)</div></td>

                <td><div class="editor-label">@Html.LabelFor(m => m.Category)</div></td>
                <td><div class="editor-field">@Html.DropDownListFor(m => m.Category, @Html.GetCategory())@Html.ValidationMessageFor(m => m.Category)</div></td>
                <td><input id="query" type="submit" value="查询" /></td>
                </tr>
                <tr>
                    <td><div class="editor-label">@Html.LabelFor(m => m.Inventory)</div></td>
                <td><div class="editor-field">@Html.DropDownListFor(m => m.Inventory, @Html.GetInventory())@Html.ValidationMessageFor(m => m.Inventory)</div></td>
                
                
                <td><div class="editor-label">@Html.LabelFor(m => m.BeginDate)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(m => m.BeginDate)@Html.ValidationMessageFor(m => m.BeginDate)</div></td>

                <td><div class="editor-label">@Html.LabelFor(m => m.EndDate)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(m => m.EndDate)@Html.ValidationMessageFor(m => m.EndDate)</div></td>

                <td>                
                @Html.ActionLink("导出EXCEL", "Report11ExportToExcel", "Report", null, new { id = "export" })</td>
            </tr>
            </tbody>
        </table>
</fieldset>
<fieldset class="ui-widget ui-widget-content ui-corner-all">
<legend class="ui-widget-header ui-corner-all"></legend>       
        @{
    var grid = new MyWebGrid(source: Model.result, defaultSort: "Amount");
    var gridColumns = new List<WebGridColumn>();
    gridColumns.Add(grid.Column("DeptName", "店名"));
    gridColumns.Add(grid.Column("FullName", "收银员"));
    if (Html.OperatorsOnDuty())
    {
        gridColumns.Add(grid.Column("OperatorsOnDuty", "当班操作员"));
    }
    gridColumns.Add(grid.Column("CategoryName", "系列名称"));
    gridColumns.Add(grid.Column("InventoryName", "单品名称"));
    gridColumns.Add(grid.Column("Cups", "销售数量", format: (item) => string.Format("{0:f2}", item.Cups)));
    gridColumns.Add(grid.Column("Amount", "销售金额", format: (item) => string.Format("{0:f2}", item.Amount)));
    gridColumns.Add(grid.Column("AmountOfDayAvg", "日均销量", format: (item) => string.Format("{0:f2}", item.AmountOfDayAvg)));
    gridColumns.Add(grid.Column("CupsRatioOfCategory", "本类别数量比例", format: (item) => string.Format("{0:P}", item.CupsRatioOfCategory)));
    gridColumns.Add(grid.Column("CupsRatioOfAll", "数量总比例", format: (item) => string.Format("{0:P}", item.CupsRatioOfAll)));
    gridColumns.Add(grid.Column("AmountRatioOfCategory", "本类别金额比例", format: (item) => string.Format("{0:P}", item.AmountRatioOfCategory)));
    gridColumns.Add(grid.Column("AmountRatioOfAll", "金额总比例", format: (item) => string.Format("{0:P}", item.AmountRatioOfAll)));
}

	@grid.GetHtml(gridColumns)
</fieldset>
<fieldset class="ui-widget ui-widget-content ui-corner-all">
<legend class="ui-widget-header ui-corner-all">汇总信息</legend>       
    <table>
    <tr>
            <td>
                @Html.LabelFor(m => m.Cups)
                </td>
                <td>
                @Html.TextBoxFor(m => m.Cups)
                @Html.ValidationMessageFor(m => m.Cups)
                </td>
                <td>
                @Html.LabelFor(m => m.Amount)
                </td>
                <td>
                @Html.TextBoxFor(m => m.Amount)
                @Html.ValidationMessageFor(m => m.Amount)
                </td>
                <td>
                @Html.LabelFor(m => m.AmountOfDayAvg)
                </td>
                <td>
                @Html.TextBoxFor(m => m.AmountOfDayAvg)
                @Html.ValidationMessageFor(m => m.AmountOfDayAvg)
                </td>                                                    
            </tr>
        </table>
</fieldset>
}
