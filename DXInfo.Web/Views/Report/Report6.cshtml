@using ynhnTransportManage
@model ynhnTransportManage.Models.Report6Model           
<script type="text/javascript">
    $(function () {
        $("#BeginDate").datepicker();
        $("#EndDate").datepicker();
    });
	</script>
 
@using (Html.BeginForm("Report6", "Report"))
{
@Html.ValidationSummary(true, "参数错误。请更正错误并重试。")
    <div>
        <fieldset>
        <table>
            <tr>
                <td colspan="10" align="center"><legend>业务量统计</legend></td>
            </tr>
            <tr>
                <td>
                <div class="editor-label">
                @Html.LabelFor(m => m.DeptId)
            </div>
            </td>
                <td>
                <div class="editor-field">
                @Html.DropDownListFor(m => m.DeptId, @Helpers.GetDepts2())
                @Html.ValidationMessageFor(m => m.DeptId)
            </div>
                </td>

                
                <td>
                    <div class="editor-label">
                @Html.LabelFor(m => m.BeginDate)
            </div>
                </td>
                <td>
                    <div class="editor-field">
                @Html.TextBoxFor(m => m.BeginDate, new { @class = "wide" })
                @Html.ValidationMessageFor(m => m.BeginDate)
            </div>
                </td>
                <td>
                    <div class="editor-label">
                @Html.LabelFor(m => m.EndDate)
            </div>
                </td>
                <td>
                    <div class="editor-field">
                @Html.TextBoxFor(m => m.EndDate, new { @class = "wide" })
                @Html.ValidationMessageFor(m => m.EndDate)
            </div>
                </td>
                <td colspan="2">
                    <p>
                <input type="submit" value="查询" />
                @Html.ActionLink("导出EXCEL", "Report6ExportToExcel", "Report")
            </p>
                </td>
            </tr>
        </table>
        </fieldset>
    </div>

    var gridRecharge = new WebGrid(source: Model.result.Recharge,
        defaultSort: "PayType",        
    canPage: false,
    canSort: true);

    var gridMemberConsume = new WebGrid(source: Model.result.MemberConsume,
        defaultSort: "PayType",
    canPage: false,
    canSort: true);

    var gridNoMemberConsume = new WebGrid(source: Model.result.NoMemberConsume,
        defaultSort: "PayType",
    canPage: false,
    canSort: true);

    var gridCard = new WebGrid(source: Model.result.Card,
        defaultSort: "Status",
    canPage: false,
    canSort: true);
    
	<div id="DivGrid" style="width:1800px;">
    <table>
    
    <tr>
    <td>充值</td>
    <td>
	@gridRecharge.GetHtml(
            columns: gridRecharge.Columns(
                    gridRecharge.Column("PayType", "支付方式"),
                    gridRecharge.Column("Amount", "充值金额", format: (item) => string.Format("{0:f2}", item.Amount)),
                        gridRecharge.Column("Donate", "充值赠送", format: (item) => string.Format("{0:f2}", item.Donate)),
                    gridRecharge.Column("Count", "充值次数")
        ))
        </td>
    </tr>
    <tr>
        <td>会员消费</td>
        <td>
     @gridMemberConsume.GetHtml(
     columns:gridMemberConsume.Columns(
             gridMemberConsume.Column("PayType", "支付方式"),
             gridMemberConsume.Column("Amount", "消费金额", format: (item) => string.Format("{0:f2}", item.Amount)),
         gridMemberConsume.Column("Quantity", "商品数量"),
         gridMemberConsume.Column("Count", "消费次数")
     )
                 )</td>
    </tr>
    <tr><td>
        非会员消费
    </td>
        <td>
              @gridNoMemberConsume.GetHtml(
columns: gridNoMemberConsume.Columns(
        gridNoMemberConsume.Column("PayType", "支付方式"),
gridNoMemberConsume.Column("Amount", "消费金额", format: (item) => string.Format("{0:f2}", item.Amount)),
    gridNoMemberConsume.Column("Quantity", "商品数量"),
    gridNoMemberConsume.Column("Count", "消费次数")
     )
        )</td>
    </tr>
    <tr>
        <td>会员卡</td>
        <td>
              @gridCard.GetHtml(
columns: gridCard.Columns(
gridCard.Column("Status", "卡状态"),
gridCard.Column("Balance", "余额", format: (item) => string.Format("{0:f2}", item.Balance)),
gridCard.Column("Point", "积分", format: (item) => string.Format("{0:f2}", item.Point)),
gridCard.Column("Fee", "补卡费", format: (item) => string.Format("{0:f2}", item.Fee)),
gridCard.Column("Count", "数量")
     )
        )</td>
    </tr>
             </table>
	</div>
}
