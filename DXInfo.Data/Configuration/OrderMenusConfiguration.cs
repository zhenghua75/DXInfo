//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXInfo.Data.Configuration
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data.Entity.ModelConfiguration;
    using DXInfo.Models;
    using System.ComponentModel.DataAnnotations.Schema;
    
    
    public class OrderMenusConfiguration : EntityTypeConfiguration<OrderMenus>
    {
        
        public OrderMenusConfiguration()
        {
            this.HasKey(k => k.Id);
            this.Property(o => o.Id).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            this.Property(o => o.Id).IsRequired();
            this.Property(o => o.OrderId).IsRequired();
            this.Property(o => o.InventoryId).IsRequired();
            this.Property(o => o.Price).HasPrecision(24,2);
            this.Property(o => o.Price).IsRequired();
            this.Property(o => o.Quantity).HasPrecision(24,2);
            this.Property(o => o.Quantity).IsRequired();
            this.Property(o => o.Amount).HasPrecision(24,2);
            this.Property(o => o.Amount).IsRequired();
            this.Property(o => o.UserId).IsRequired();
            this.Property(o => o.CreateDate).IsRequired();
            this.Property(o => o.Comment).IsUnicode();
            this.Property(o => o.Comment).HasMaxLength(200);
            this.Property(o => o.Status).IsRequired();
            this.Property(o => o.BackQuantity).HasPrecision(24,2);
            this.Property(o => o.BackQuantity).IsRequired();
            this.Property(o => o.BackReseaon).IsUnicode();
            this.Property(o => o.BackReseaon).HasMaxLength(200);
            this.Property(o => o.MenuQuantity).HasPrecision(24,2);
            this.Property(o => o.MenuQuantity).IsRequired();
            this.Property(o => o.BillQuantity).HasPrecision(24,2);
            this.Property(o => o.BillQuantity).IsRequired();
            this.Property(o => o.MissQuantity).HasPrecision(24,2);
            this.Property(o => o.MissQuantity).IsRequired();
            this.Property(o => o.IsPackage).IsRequired();
            this.Property(o => o.PackageSn).IsRequired();
        }
    }
}
